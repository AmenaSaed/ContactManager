{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","float","color","cursor","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","fontWeight","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","brading","About","NotFound","class","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed4ce6ff.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context= React.createContext();\r\n\r\nconst reducer = (state, action) =>{\r\n   switch(action.type){\r\n       case'DELETE_CONTACT':\r\n       return{\r\n           ...state,\r\ncontacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n       };\r\n       case'ADD_CONTACT':\r\n       return{\r\n           ...state,\r\n           contacts: [action.payload, ...state.contacts]\r\n       };\r\n\r\n       case 'UPDATE_CONTACT':\r\n       return{\r\n           ...state,\r\n           contacts:state.contacts.map(contact =>\r\n          contact.id === action.payload.id ? (contact = action.payload)\r\n          :contact)\r\n       }\r\n       default:\r\n       return state;\r\n\r\n   } \r\n};\r\nexport class Provider extends Component{\r\n    state ={\r\n            contacts: [ ],\r\n dispatch: action =>{\r\nthis.setState( state => reducer(state, action))}\r\n};\r\n\r\n async componentDidMount(){\r\n const res = await axios\r\n .get('https://jsonplaceholder.typicode.com/users');\r\nthis.setState({contacts:res.data});\r\n}\r\nrender()\r\n{\r\n    return (\r\n    <Context.Provider value={this.state}>\r\n        \r\n        {this.props.children}\r\n        \r\n        </Context.Provider>\r\n    )\r\n}\r\n}\r\nexport const Consumer= Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\n import axios from 'axios';\r\n//this line of command i will test to the Emmet\r\nclass Contact extends Component {\r\n  state = {\r\n    \r\n    showContactInfo:false\r\n  };\r\n  onDeleteClick = async (id,dispatch)=>{\r\n    try{await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    dispatch({type: 'DELETE_CONTACT', payload:id});}\r\n    catch(e){\r\n      dispatch({type: 'DELETE_CONTACT', payload:id});\r\n    }\r\n  \r\n  }\r\n  render() {\r\n\r\n\r\n      const{ id,name,email,phone}= this.props.contact;\r\n      const {showContactInfo} =this.state;\r\n    return (\r\n      <Consumer>\r\n      {value  => {\r\n        const { dispatch} = value;\r\n        \r\n        return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n        {name}\r\n        <i onClick={()=> \r\n        this.setState({showContactInfo: !this.state.showContactInfo})  \r\n        \r\n      }\r\n        className=\" fas fa-sort-down\"/>\r\n      <i className=\"fas fa-times\"\r\n      style={{float:'right',color:'red',cursor:'pointer'}}\r\n      onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n      />\r\n<Link to ={`contact/edit/${id}`}>\r\n<i \r\nclassName =\"fas fa-pencil-alt\"\r\nstyle={{\r\n  cursor:'pointer',\r\n  float:'right',\r\n  color:'black',\r\n marginRight:'1rem' \r\n}}\r\n></i>\r\n</Link>\r\n        </h4>\r\n        {\r\nshowContactInfo ? (  <ul className=\"list-group\">\r\n<li className=\"list-group-item\">Email:{email}</li>\r\n<li className=\"list-group-item\"> Phone:{phone}</li>\r\n\r\n</ul>):null\r\n        }\r\n  \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n</Consumer>\r\n);\r\n}\r\n}\r\nContact.propTypes = {\r\ncontact:PropTypes.object.isRequired,\r\n\r\n}\r\nexport default  Contact","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from  '../../context';\r\n class Contacts extends Component {\r\n  render() {\r\n\r\n    return(\r\n      <Consumer>\r\n        {value  =>{\r\n          const {contacts} = value;\r\n          return(\r\n<React.Fragment>\r\n  <h1  className =\" display-4 mb-2\">\r\n  <span className=\"text-danger\"> Conatct </span>\r\n  List  </h1>\r\n{contacts.map(contact =>(\r\n<Contact\r\nkey={contact.id}\r\ncontact={contact}\r\n\r\n\r\n\r\n/>\r\n))}\r\n    </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n      }\r\n    }\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst  TextInputGroup = ({\r\nlabel,\r\nname,\r\nvalue,\r\nplaceholder,\r\nonChange,\r\ntype,\r\nerror\r\n}) => {\r\n    return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor=\"name\">{label}</label>\r\n<input type={type} name={name} className={classnames('form-control form-control-lg',{'is-invalid':error})} \r\nplaceholder={placeholder} \r\n\r\nvalue= {value} \r\nonChange ={onChange} />\r\n{error && <div className=\"invalid-feedback\">{error}</div>    \r\n}\r\n</div>\r\n    );\r\n    \r\n};\r\nTextInputGroup.propTypes = {\r\nlabel: PropTypes.string.isRequired,   \r\n name:PropTypes.string.isRequired,   \r\n placeholder:PropTypes.string.isRequired,   \r\n value:PropTypes.string.isRequired,   \r\n type:PropTypes.string.isRequired, \r\n onChange:PropTypes.func.isRequired ,\r\n error: PropTypes.string\r\n}\r\nTextInputGroup.defaultProps ={\r\n       type:'text'\r\n   }\r\nexport default TextInputGroup;","import React ,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component{\r\n\r\n    state= {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{\r\n        }\r\n\r\n    };\r\n    onSubmit= async (dispatch,e) => {\r\ne.preventDefault();\r\n//console.log(this.state);\r\nconst{name ,email, phone}=this.state;\r\n// checl for errors\r\nif(name===''){\r\nthis.setState({errors:{name:'Name is required'}});\r\nreturn;\r\n}\r\nif(email===''){\r\n    this.setState({errors:{email:' *** Email is required'}});\r\nreturn;    \r\n}\r\n    if(phone===''){\r\n        this.setState({errors:{phone:'phone  is required'}});\r\n       return;\r\n    }\r\n\r\nconst newContact ={\r\n    \r\n  name,\r\n  email,\r\n  phone  \r\n};\r\nconst res = await axios.post('https://jsonplaceholder.typicode.com/users'\r\n,newContact);\r\ndispatch({type:'ADD_CONTACT',payload:res.data});\r\n// clear state \r\nthis.setState({\r\n    name:'',\r\n    email:'',\r\n    phone:'',\r\n    errors:{ }\r\n});\r\nthis.props.history.push('/');\r\n};\r\n\r\n    onChange =(e)=> this.setState({[e.target.name]: e.target.value});\r\n    \r\n    render(){\r\nconst {name,email,phone, errors} = this.state;\r\n       \r\n   return(\r\n       <Consumer>\r\n           {value =>{\r\n            const{dispatch}=value;\r\n            return(\r\n<div className=\"card mb-3\">\r\n            <div style={{ fontWeight:'bold'}} \r\n            className=\"card-header\">Add Contact</div>\r\n            <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n \r\n <TextInputGroup\r\n label=\"Name\"\r\n name=\"name\"placeholder=\"Enter name\"\r\n value={name}\r\n onChange={this.onChange}\r\nerror={errors.name}\r\n\r\n \r\n />\r\n <TextInputGroup\r\n label=\"Email\"\r\n type=\"email\"\r\n name=\"email\"placeholder=\"Enter Email\"\r\n value={email}\r\n onChange={this.onChange}\r\n error={errors.email}\r\n\r\n \r\n />\r\n     <TextInputGroup\r\n label=\"Phone\"\r\n name=\"phone\"placeholder=\"Enter Phone\"\r\n value={phone}\r\n onChange={this.onChange}\r\n error={errors.phone}\r\n \r\n />       <input type=\"submit\" value=\" Add Contact\" className=\"btn  btn-danger btn-block\" />\r\n            </form>\r\n            </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n</Consumer>\r\n\r\n        )\r\n        \r\n}\r\n}\r\nexport default AddContact;","import React ,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component{\r\n\r\n    state= {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{\r\n        }\r\n\r\n    };\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n\r\n        })\r\n    }\r\n    onSubmit= async (dispatch,e) => {\r\ne.preventDefault();\r\n//console.log(this.state);\r\nconst{name ,email, phone}=this.state;\r\n// checl for errors\r\nif(name===''){\r\nthis.setState({errors:{name:'Name is required'}});\r\nreturn;\r\n}\r\nif(email===''){\r\n    this.setState({errors:{email:' *** Email is required'}});\r\nreturn;    \r\n}\r\n    if(phone===''){\r\n        this.setState({errors:{phone:'phone  is required'}});\r\n       return;\r\n    }\r\n\r\nconst updContact={\r\n    name,\r\n    email,\r\n    phone\r\n}\r\nconst{id}= this.props.match.params;\r\nconst res =  await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\ndispatch({type:'UPDATE_CONTACT',payload:res.data\r\n});\r\n// clear state \r\nthis.setState({\r\n    name:'',\r\n    email:'',\r\n    phone:'',\r\n    errors:{ }\r\n});\r\nthis.props.history.push('/');\r\n};\r\n\r\n    onChange =(e)=> this.setState({[e.target.name]: e.target.value});\r\n    \r\n    render(){\r\nconst {name,email,phone, errors} = this.state;\r\n       \r\n   return(\r\n       <Consumer>\r\n           {value =>{\r\n            const{dispatch}=value;\r\n            return(\r\n<div className=\"card mb-3\">\r\n            <div style={{ fontWeight:'bold'}} \r\n            className=\"card-header\">Eits Contact</div>\r\n            <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n \r\n <TextInputGroup\r\n label=\"Name\"\r\n name=\"name\"placeholder=\"Enter name\"\r\n value={name}\r\n onChange={this.onChange}\r\nerror={errors.name}\r\n\r\n \r\n />\r\n <TextInputGroup\r\n label=\"Email\"\r\n type=\"email\"\r\n name=\"email\"placeholder=\"Enter Email\"\r\n value={email}\r\n onChange={this.onChange}\r\n error={errors.email}\r\n\r\n \r\n />\r\n     <TextInputGroup\r\n label=\"Phone\"\r\n name=\"phone\"placeholder=\"Enter Phone\"\r\n value={phone}\r\n onChange={this.onChange}\r\n error={errors.phone}\r\n \r\n />       <input type=\"submit\" value=\" Update Contact\" className=\"btn  btn-danger btn-block\" />\r\n            </form>\r\n            </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n</Consumer>\r\n\r\n        )\r\n        \r\n}\r\n}\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header =(props) => {\r\n    const{brading}=props;\r\n    return(\r\n<nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n<div className=\"container\">\r\n<Link to=\"/\" className=\"navbar-brand\">\r\n{brading}\r\n</Link>\r\n<div>\r\n\r\n    <ul  className=\"navbar-nav mr-auto\">\r\n    <li className=\"nav-item\">\r\n    <Link  to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n    <Link  to=\"/contact/add\" className=\"nav-link\"> <i className=\"fas fa-plus\"></i>Add</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n    <Link  to=\"/about\" className=\"nav-link\"> <i className=\"fas fa-question\"></i>About</Link>\r\n    </li>\r\n    </ul>\r\n</div>\r\n</div>\r\n\r\n</nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    brading:\"Default brading\"\r\n}\r\nHeader.propTypes = {\r\n    brading :PropTypes.string.isRequired\r\n\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default ()  => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"dispay-4\">about contact-manager</h1>\r\n    <p className=\"lead\"> simple app to manage contacts</p>\r\n    <p className=\"text-secondary\"> Version 1.0.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n//export default About;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 \"><i class=\"fas fa-exclamation-triangle\"></i> <span className=\"text-danger\">404</span> page not NotFound</h1>\r\n      <p className=\"lead\">sorry, that page does not exist </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\n class Test extends Component {\r\n     state={\r\n         title:'',\r\n         body:''\r\n     };\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\ntitle: data.title,\r\nbody:   data.body\r\n  })\r\n  \r\n  );\r\n\r\n}\r\n// componentWillMount(){\r\n//     console.log('ComponentWillMount');\r\n// }\r\n// componentDidUpdate(){\r\n//     console.log('ComponentDidUpdate');\r\n//     }\r\n//     componentWillUpdate(){\r\n//         console.log('ComponentWilldUpdate');\r\n//         }\r\n\r\n  render() {\r\n      const{title, body}= this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Test;","import React, { Component } from 'react';\nimport{HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from  './components/contacts/AddContact';\nimport EditContact from  './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport{Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n  \n    return (\n      <Provider>\n          <Router>\n      <div className=\"App\">\n        <Header brading=\"Contact Manager\"/>\n       <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component =\n        {Contacts} />\n        <Route exact path =\"/about\" component ={About} />\n<Route exact path =\"/contact/add\" component ={AddContact} />\n<Route exact path =\"/contact/edit/:id\" component ={EditContact} />\n<Route exact path =\"/test\" component ={Test} />\n   <Route exact component={NotFound}/>\n    </Switch>\n         </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}